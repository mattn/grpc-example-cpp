// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: customer_service.proto

#ifndef PROTOBUF_customer_5fservice_2eproto__INCLUDED
#define PROTOBUF_customer_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <grpc++/impl/internal_stub.h>
#include <grpc++/impl/service_type.h>
#include <grpc++/status.h>

namespace grpc {
class CompletionQueue;
class ChannelInterface;
class RpcService;
class ServerContext;
template <class OutMessage> class ClientAsyncResponseReader;
template <class OutMessage> class ServerAsyncResponseWriter;
template <class InMessage> class ClientReader;
template <class OutMessage> class ServerWriter;
template <class OutMessage> class ClientAsyncReader;
template <class InMessage> class ServerAsyncWriter;
}  // namespace grpc
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_customer_5fservice_2eproto();
void protobuf_AssignDesc_customer_5fservice_2eproto();
void protobuf_ShutdownFile_customer_5fservice_2eproto();

class ResponseType;
class RequestType;
class Person;

// ===================================================================

class ResponseType : public ::google::protobuf::Message {
 public:
  ResponseType();
  virtual ~ResponseType();

  ResponseType(const ResponseType& from);

  inline ResponseType& operator=(const ResponseType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseType& default_instance();

  void Swap(ResponseType* other);

  // implements Message ----------------------------------------------

  inline ResponseType* New() const { return New(NULL); }

  ResponseType* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseType& from);
  void MergeFrom(const ResponseType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ResponseType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_customer_5fservice_2eproto();
  friend void protobuf_AssignDesc_customer_5fservice_2eproto();
  friend void protobuf_ShutdownFile_customer_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ResponseType* default_instance_;
};
// -------------------------------------------------------------------

class RequestType : public ::google::protobuf::Message {
 public:
  RequestType();
  virtual ~RequestType();

  RequestType(const RequestType& from);

  inline RequestType& operator=(const RequestType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestType& default_instance();

  void Swap(RequestType* other);

  // implements Message ----------------------------------------------

  inline RequestType* New() const { return New(NULL); }

  RequestType* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestType& from);
  void MergeFrom(const RequestType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.RequestType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_customer_5fservice_2eproto();
  friend void protobuf_AssignDesc_customer_5fservice_2eproto();
  friend void protobuf_ShutdownFile_customer_5fservice_2eproto();

  void InitAsDefaultInstance();
  static RequestType* default_instance_;
};
// -------------------------------------------------------------------

class Person : public ::google::protobuf::Message {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person& default_instance();

  void Swap(Person* other);

  // implements Message ----------------------------------------------

  inline Person* New() const { return New(NULL); }

  Person* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Person* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 age = 2;
  inline void clear_age();
  static const int kAgeFieldNumber = 2;
  inline ::google::protobuf::int32 age() const;
  inline void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.Person)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 age_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_customer_5fservice_2eproto();
  friend void protobuf_AssignDesc_customer_5fservice_2eproto();
  friend void protobuf_ShutdownFile_customer_5fservice_2eproto();

  void InitAsDefaultInstance();
  static Person* default_instance_;
};
// ===================================================================


// ===================================================================

// ResponseType

// -------------------------------------------------------------------

// RequestType

// -------------------------------------------------------------------

// Person

// optional string name = 1;
inline void Person::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Person::name() const {
  // @@protoc_insertion_point(field_get:proto.Person.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Person.name)
}
inline void Person::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Person.name)
}
inline void Person::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Person.name)
}
inline ::std::string* Person::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Person.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.Person.name)
}

// optional int32 age = 2;
inline void Person::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 Person::age() const {
  // @@protoc_insertion_point(field_get:proto.Person.age)
  return age_;
}
inline void Person::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:proto.Person.age)
}


class CustomerService GRPC_FINAL {
 public:
  class Stub GRPC_FINAL : public ::grpc::InternalStub {
   public:
    std::unique_ptr< ::grpc::ClientReader< ::proto::Person>> ListPerson(::grpc::ClientContext* context, const ::proto::RequestType& request);
    std::unique_ptr< ::grpc::ClientAsyncReader< ::proto::Person>> AsyncListPerson(::grpc::ClientContext* context, const ::proto::RequestType& request, ::grpc::CompletionQueue* cq, void* tag);
    ::grpc::Status AddPerson(::grpc::ClientContext* context, const ::proto::Person& request, ::proto::ResponseType* response);
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ResponseType>> AsyncAddPerson(::grpc::ClientContext* context, const ::proto::Person& request, ::grpc::CompletionQueue* cq, void* tag);
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);

  class Service : public ::grpc::SynchronousService {
   public:
    Service() : service_(nullptr) {}
    virtual ~Service();
    virtual ::grpc::Status ListPerson(::grpc::ServerContext* context, const ::proto::RequestType* request, ::grpc::ServerWriter< ::proto::Person>* writer);
    virtual ::grpc::Status AddPerson(::grpc::ServerContext* context, const ::proto::Person* request, ::proto::ResponseType* response);
    ::grpc::RpcService* service() GRPC_OVERRIDE GRPC_FINAL;
   private:
    ::grpc::RpcService* service_;
  };
  class AsyncService GRPC_FINAL : public ::grpc::AsynchronousService {
   public:
    explicit AsyncService(::grpc::CompletionQueue* cq);
    ~AsyncService() {};
    void RequestListPerson(::grpc::ServerContext* context, ::proto::RequestType* request, ::grpc::ServerAsyncWriter< ::proto::Person>* writer, ::grpc::CompletionQueue* cq, void *tag);
    void RequestAddPerson(::grpc::ServerContext* context, ::proto::Person* request, ::grpc::ServerAsyncResponseWriter< ::proto::ResponseType>* response, ::grpc::CompletionQueue* cq, void *tag);
  };
};

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_customer_5fservice_2eproto__INCLUDED
